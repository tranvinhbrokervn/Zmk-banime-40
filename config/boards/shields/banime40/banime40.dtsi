/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/nrf-pinctrl.h>

/ {
    chosen {
        zmk,kscan = &kscan_composite;
        zmk,matrix_transform = &default_transform;
        zephyr,display = &oled;  // Khai báo OLED làm display mặc định
        //zmk,encoder = &encoder;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
        
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";
    
        // Khai báo theo thứ tự ROW0 → ROW3 (từ thấp đến cao)
        row-gpios
            = <&gpio0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // ROW0 - P0.11
            , <&gpio1 0  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // ROW1 - P1.00  
            , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // ROW2 - P0.24
            , <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // ROW3 - P0.22
            ;
        
        // Khai báo theo thứ tự COL0 → COL9 (từ thấp đến cao)
        col-gpios
            = <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL0 - P0.31
            , <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL1 - P0.29
            , <&gpio0 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL2 - P0.02
            , <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL3 - P1.15
            , <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL4 - P1.13
            , <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL5 - P1.11
            , <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL6 - P0.10
            , <&gpio0 2  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL7 - P0.09
            , <&gpio0 29  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL8 - P1.06
            , <&gpio0 31  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // COL9 - P1.04
            ;
    };
    // Rotary Encoder configuration    
    encoder0: encoder_0 {
        compatible = "alps,ec11";
        /*label = "ENCODER_0";*/
        a-gpios = <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;  // Pin A
        b-gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;  // Pin B
        steps = <4>; // Số xung mỗi bước xoay
        status = "okay";
    };
    
    /*sensors: sensors {
          compatible = "zmk,keymap-sensors";
          sensors = <&encoder0>;
          triggers-per-rotation = <80>;
    };   */ 
    encoder_button_kscan: kscan_direct {
        compatible = "zmk,kscan-gpio-direct";
        label = "ENCODER_BUTTON_KSCAN";
        
        input-gpios = <&gpio1 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        debounce-press-ms = <50>;
        debounce-release-ms = <50>;
        #binding-cells = <1>;
        status = "okay";
    };
    kscan_composite: kscan_composite {
        compatible = "zmk,kscan-composite";
        label = "KSCAN_COMPOSITE";
        status = "okay";        
    
        // Nguồn kscan 1: matrix
        matrix {
            kscan = <&kscan0>;
        };

        // Nguồn kscan 2: encoder button direct GPIO
        direct {
            kscan = <&encoder_button_kscan>;
        //row-offset = <4>;  // shift row để không overlap với matrix 4x10
        };
    };
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder0 &encoder_button_kscan>;
        triggers-per-rotation = <20>; // chỉ áp dụng cho rotary
    };
};

// I2C Configuration for OLED / BƯỚC 1: CHỈ ENABLE I2C - CHƯA ENABLE OLED
&i2c0 {
    status = "okay";
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    clock-frequency = <I2C_BITRATE_STANDARD>; // 400kHz
    
    // OLED Display    
    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;           // I2C address
        label = "DISPLAY";
        width = <128>;          // Screen width
        height = <32>;          // Screen height (32px cho 0.91")
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>; // height - 1
        // segment-remap;
        // com-invdir;
        com-sequential;
        prechargep = <0x22>;
        inversion-on;
    };    
};

// Pinctrl cho I2C - SDA: P1.01, SCL: P1.02
&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 1)>,    // SDA - P1.01
                    <NRF_PSEL(TWIM_SCL, 1, 2)>;     // SCL - P1.02
            bias-pull-up;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 1)>,
                    <NRF_PSEL(TWIM_SCL, 1, 2)>;
            low-power-enable;
        };
    };        
};
/*&encoder {
    status = "okay";
};*/
