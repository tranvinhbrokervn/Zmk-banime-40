/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        ht_home_end: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_HOME_END";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
        /* Macro bọc BT_CLR vì &bt không dùng trực tiếp trong hold-tap */
        bt_clr_macro: bt_clear {
            compatible = "zmk,behavior-macro";
            label = "BT_CLR_MACRO";
            #binding-cells = <0>;
            bindings = <&bt BT_CLR>;
        };
        ht_bt_boot: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_BT_BOOT";
            #binding-cells = <0>;
            bindings = <&bt_clr_macro>, <&bootloader>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;        
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp Q      &kp W    &kp E    &kp R    &kp T    &kp Y    &kp U    &kp I     &kp O     &kp P
                &kp A      &kp S    &kp D    &kp F    &kp G    &kp H    &kp J    &kp K     &kp L     &kp BSPC
                &kp LSHFT  &kp Z    &kp X    &kp C    &kp V    &kp B    &kp N    &kp M     &kp SEMI  &kp SQT
                &kp LCTRL  &kp TAB  &kp LALT &kp ESC  &lt 2 RET &lt 3 SPACE &kp LT   &kp GT    &kp QMARK &kp DEL
            >;
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };
     
        num_layer {
            label = "Numb"; 
            bindings = <
                &kp N1     &kp AT   &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR
                &kp TAB    &kp TILDE &kp LBKT &kp RBKT &kp DOWN  &kp MINUS &kp PLUS &kp BSPC  &trans    &trans
                &kp LSHFT  &kp PLUS &kp MINUS &kp ASTRK &kp FSLH &kp LT    &kp GT   &kp QMARK &trans    &trans
                &kp LCTRL  &kp TAB  &kp LALT          &lt 2 RET         &lt 3 SPACE       &kp K_APP &kp DEL   &kp ESC
            >;
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        base_repeat_layer {
            label = "Symb";
            bindings = <
                &kp Q      &kp W    &kp E    &kp R    &kp T    &kp Y    &kp U    &kp I     &kp O     &kp P
                &kp A      &kp S    &kp D    &kp F    &kp G    &kp H    &kp J    &kp K     &kp L     &kp BSPC
                &kp LSHFT  &kp Z    &kp X    &kp C    &kp V    &kp B    &kp N    &kp M     &kp SEMI  &kp SQT
                &kp LCTRL  &kp TAB  &kp LALT          &lt 2 RET       &lt 3 SPACE       &kp LT    &kp GT    &kp QMARK
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        func_layer {
            label = "Navi";
            bindings = <
                &kp ESC    &kp INS  &kp PG_UP &kp PG_DN &kp HOME &trans   &trans   &trans    &trans    &trans
                &kp TAB    &kp LEFT &kp DOWN  &kp RIGHT &kp DEL  &trans   &trans   &trans    &trans    &trans
                &trans     &trans   &trans    &trans    &trans   &trans   &trans   &kp UP    &kp END   &trans
                &kp C_MUTE &kp C_MUTE &kp C_MUTE      &kp RET          &kp SPACE         &kp LEFT  &kp DOWN  &kp RIGHT
            >;
            sensor-bindings = <&inc_dec_kp LC(EQUAL) LC(MINUS)>;
        };
        // Encoder button mapping
        encoder_sw {
            compatible = "zmk,keymap-sensors";
            sensors = <&encoder_button>;
            triggers-per-rotation = <1>;
        
        // Định nghĩa behavior cho encoder button trên từng layer
        sensor-bindings = <
            &ht_home_end HOME END,        // Layer 0 (Base): tap=Home, hold=End
            &ht_home_end HOME END,        // Layer 1 (Numb): tap=Home, hold=End  
            &kp C_MUTE,                   // Layer 2 (Symb): Mute
            &ht_bt_boot BT_CLR 0          // Layer 3 (Navi): tap=BT clear, hold=Bootloader
        >;
        };
    };    
};
